name: deploying my image to ecs
on:
    push:
        branches:
            - main
env:
    AWS_REGION: us-east-2
    ECS_CLUSTER: app_cluster
    CONTAINER_NAME: node-app
    ECS_SERVICE: app_service
    ECS_TD: .github/workflows/td.json
    ECR_REGISTRY: "143096200225.dkr.ecr.us-east-2.amazonaws.com"
    ECR_REPOSITORY: "node-app"
    IMAGE_TAG: latest
    
jobs:
    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        environment: dev
        steps:
            - name: Checkout
              uses: actions/checkout@v3


            - name: configuring aws crediencials using provided keys
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ env.AWS_REGION }}

            - name: login to amazon ecr using above credientials
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1


            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3


            - name: building my image 
              id: build-docker-image
              run:  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

            - name: pusing my image to ecr
              id: push-image
              run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

            - name: getting outputs
              id: build-image
              run: echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

            - name: filling new image id
              id: task-def-1
              uses: aws-actions/amazon-ecs-render-task-definition@v1
              with:
                task-definition: ${{env.ECS_TD}}
                container-name: ${{env.CONTAINER_NAME }}
                image: ${{ steps.build-image.outputs.image }}

            - name: deploying amazon ecs task defination
              uses:  aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                task-definition: ${{ steps.task-def-1.outputs.task-definition}}
                service: ${{ env.ECS_SERVICE}}
                cluster: ${{ env.ECS_CLUSTER}}
                wait-for-service-stability: false
              


